{"version":3,"sources":["Apple.js"],"names":["Apple","require","exports","Apple_list","req","res","find","theapples","send","status","Apple_detail","console","log","params","id","findById","result","Apple_update_put","JSON","stringify","body","toUpdate","Apple_colour","Apple_price","Apple_quantity","save","Apple_create_post","document","Apple_delete","findByIdAndDelete","Apples_view_all_Page","theApples","render","title","results","Apple_view_one_Page","query","toShow","Apple_create_Page","err","Apple_update_Page","Apple_delete_Page"],"mappings":"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","sourcesContent":["var Apple = require('../models/Apple');\r\n// List of all Apples\r\nexports.Apple_list = async function (req, res) {\r\n    try {\r\n        theapples = await Apple.find();\r\n        res.send(theapples);\r\n    } catch (err) {\r\n        res.send(`{\"error\": ${err}}`)\r\n        res.status(500);\r\n    }\r\n};\r\n\r\n// for a specific Apples.\r\n// for a specific Apples.\r\nexports.Apple_detail = async function (req, res) {\r\n    console.log(\"detail\" + req.params.id)\r\n    try {\r\n        result = await Apple.findById(req.params.id)\r\n        res.send(result)\r\n    } catch (error) {\r\n        res.status(500)\r\n        res.send(`{\"error\": document for id ${req.params.id} not found`);\r\n    }\r\n};\r\n\r\n// Handle Apples update form on PUT.\r\nexports.Apple_update_put = async function (req, res) {\r\n    console.log(`update on id ${req.params.id} with body ${JSON.stringify(req.body)}`)\r\n    try {\r\n        let toUpdate = await Apple.findById(req.params.id)\r\n        // Do updates of properties\r\n        if (req.body.Apple_colour) toUpdate.Apple_colour = req.body.Apple_colour;\r\n        if (req.body.Apple_price) toUpdate.Apple_price = req.body.Apple_price;\r\n        if (req.body.Apple_quantity) toUpdate.Apple_quantity = req.body.Apple_quantity;\r\n        let result = await toUpdate.save();\r\n        console.log(\"Success \" + result)\r\n        res.send(result)\r\n    } catch (err) {\r\n        res.status(500)\r\n        res.send(`{\"error\": ${err}: Update for id ${req.params.id} failed`);\r\n    }\r\n};\r\n\r\n\r\n// Handle Apples create on POST.\r\nexports.Apple_create_post = async function (req, res) {\r\n    console.log(req.body)\r\n    try {\r\n        let document = new Apple();\r\n        \r\n        document.Apple_colour = req.body.Apple_colour;\r\n        document.Apple_price = req.body.Apple_price;\r\n        document.Apple_quantity = req.body.Apple_quantity;\r\n\r\n        let result = await document.save();\r\n        res.send(result);\r\n    } catch (err) {\r\n        // console.log(err);\r\n        res.send(err)\r\n        res.status(500);\r\n    }\r\n};\r\n// Handle Apples delete on DELETE.\r\nexports.Apple_delete = async function (req, res) {\r\n    console.log(\"delete \" + req.params.id)\r\n    try {\r\n        result = await Apple.findByIdAndDelete(req.params.id)\r\n        console.log(\"Removed \" + result)\r\n        res.send(result)\r\n    } catch (err) {\r\n        res.status(500)\r\n        res.send(`{\"error\": Error deleting ${err}}`);\r\n    }\r\n};\r\n\r\n\r\n// VIEWS\r\n// Handle a show all view\r\nexports.Apples_view_all_Page = async function (req, res) {\r\n    try {\r\n        theApples = await Apple.find();\r\n        res.render('Apples', {\r\n            title: 'Apple Search Results',\r\n            results: theApples\r\n        });\r\n    } catch (err) {\r\n        res.send(`{\"error\": ${err}}`)\r\n        res.status(500);\r\n    }\r\n};\r\n// Handle a show one view with id specified by query\r\nexports.Apple_view_one_Page = async function (req, res) {\r\n    console.log(\"single view for id \" + req.query.id)\r\n    try {\r\n        result = await Apple.findById(req.query.id)\r\n        res.render('Appledetail', {\r\n            title: 'Apple Detail',\r\n            toShow: result\r\n        });\r\n    } catch (err) {\r\n        res.status(500)\r\n        res.send(`{'error': '${err}'}`);\r\n    }\r\n};\r\n// Handle building the view for creating a Apple.\r\n// No body, no in path parameter, no query.\r\n// Does not need to be async\r\nexports.Apple_create_Page = function (req, res) {\r\n    console.log(\"create view\")\r\n    try {\r\n        res.render('Applecreate', {\r\n            title: 'Apple Create'\r\n        });\r\n    } catch (err) {\r\n        res.status(500)\r\n        res.send(`{'error': '${err}'}`);\r\n    }\r\n};\r\n// Handle building the view for updating a Apples.\r\n// query provides the id\r\nexports.Apple_update_Page = async function (req, res) {\r\n    console.log(\"update view for item \" + req.query.id)\r\n    try {\r\n        let result = await Apple.findById(req.query.id)\r\n        res.render('Appleupdate', {\r\n            title: 'Apple Update',\r\n            toShow: result\r\n        });\r\n    } catch (err) {\r\n        res.status(500)\r\n        res.send(`{'error': '${err}'}`);\r\n    }\r\n};\r\n// Handle a delete one view with id from query\r\nexports.Apple_delete_Page = async function (req, res) {\r\n    console.log(\"Delete view for id \" + req.query.id)\r\n    try {\r\n        result = await Apple.findById(req.query.id)\r\n        res.render('Appledelete', {\r\n            title: 'Apple Delete',\r\n            toShow: result\r\n        });\r\n    } catch (err) {\r\n        res.status(500)\r\n        res.send(`{'error': '${err}'}`);\r\n    }\r\n};\r\n// Handle a show one view with id specified by query \r\nexports.Apple_view_one_Page = async function(req, res) { \r\n    console.log(\"single view for id \"  + req.query.id) \r\n    try{ \r\n        result = await Apple.findById( req.query.id) \r\n        res.render('Appledetail',  \r\n{ title: 'Apple Detail', toShow: result }); \r\n    } \r\n    catch(err){ \r\n        res.status(500) \r\n        res.send(`{'error': '${err}'}`); \r\n    } \r\n}; \r\n\r\n // Handle building the view for creating a Apples. \r\n// No body, no in path parameter, no query. \r\n// Does not need to be async \r\nexports.Apple_create_Page =  function(req, res) { \r\n    console.log(\"create view\") \r\n    try{ \r\n        res.render('Applecreate', { title: 'Apple Create'}); \r\n    } \r\n    catch(err){ \r\n        res.status(500) \r\n        res.send(`{'error': '${err}'}`); \r\n    } \r\n}; \r\n\r\n// Handle building the view for updating a Apples. \r\n// query provides the id \r\nexports.Apple_update_Page =  async function(req, res) { \r\n    console.log(\"update view for item \"+req.query.id) \r\n    try{ \r\n        let result = await Apple.findById(req.query.id) \r\n        res.render('Appleupdate', { title: 'Apple Update', toShow: result }); \r\n    } \r\n    catch(err){ \r\n        res.status(500) \r\n        res.send(`{'error': '${err}'}`); \r\n    } \r\n}; \r\n\r\n// Handle a delete one view with id from query \r\nexports.Apple_delete_Page = async function(req, res) { \r\n    console.log(\"Delete view for id \"  + req.query.id) \r\n    try{ \r\n        result = await Apple.findById(req.query.id) \r\n        res.render('Appledelete', { title: 'Apple Delete', toShow: \r\nresult }); \r\n    } \r\n    catch(err){ \r\n        res.status(500) \r\n        res.send(`{'error': '${err}'}`); \r\n    } \r\n};"],"file":"Apple.dev.js"}