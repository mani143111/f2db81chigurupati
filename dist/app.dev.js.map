{"version":3,"sources":["app.js"],"names":["express","require","path","mongoose","mongodb","cookieParser","logger","Apple","config","connectionString","process","env","MONGO_CON","connect","useNewUrlParser","useUnifiedTopology","db","connection","on","console","error","bind","once","log","indexRouter","usersRouter","AppleRouter","gridbuildRouter","selectorRouter","resourceRouter","app","set","join","__dirname","use","json","urlencoded","extended","recreateDB","deleteMany","instance1","Apple_colour","Apple_price","Apple_quantity","save","err","doc","instance2","instance3","reseed","req","res","next","createError","locals","message","get","status","render","module","exports"],"mappings":"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","sourcesContent":["var express = require('express');\r\n\r\nvar path = require('path');\r\n\r\nvar mongoose = require('mongoose')\r\n\r\nvar mongodb = require('mongodb')\r\n\r\nvar cookieParser = require('cookie-parser');\r\n\r\nvar logger = require('morgan');\r\n\r\nvar Apple = require(\"./models/Apple\");\r\n\r\nrequire('dotenv').config();\r\n\r\nconst connectionString =\r\n\r\n  process.env.MONGO_CON\r\n\r\nmongoose = require('mongoose');\r\n\r\nmongoose.connect(connectionString,\r\n\r\n  {\r\n\r\n    useNewUrlParser: true,\r\n\r\n    useUnifiedTopology: true\r\n\r\n  });\r\n\r\nvar db = mongoose.connection;\r\n\r\n//Bind connection to error event\r\n\r\ndb.on('error', console.error.bind(console, 'MongoDB connectionerror:'));\r\n\r\ndb.once(\"open\", function () {\r\n\r\n  console.log(\"Connection to DB succeeded\")\r\n\r\n});\r\n\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar AppleRouter = require('./routes/Apple');\r\nvar gridbuildRouter = require('./routes/gridbuild');\r\nvar selectorRouter = require('./routes/selector');\r\nvar resourceRouter = require('./routes/resource');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\napp.use('/Apple', AppleRouter);\r\napp.use('/gridbuild', gridbuildRouter);\r\napp.use('/selector', selectorRouter);\r\napp.use('/resource', resourceRouter);\r\n\r\n// We can seed the collection if needed on server start\r\n\r\nasync function recreateDB(){\r\n\r\n  // Delete everything\r\n \r\n  await Apple.deleteMany();\r\n \r\n  let instance1 = new\r\n \r\n Apple({Apple_colour:\"red\", Apple_price:'50',Apple_quantity:100.0});\r\n \r\n  instance1.save( function(err,doc) {\r\n \r\n  if(err) return console.error(err);\r\n \r\n  console.log(\"First Apple details saved\")\r\n \r\n  });\r\n \r\n  let instance2 = new\r\n \r\n  Apple({Apple_colour:\"green\", Apple_price:'120',Apple_quantity:200.0});\r\n \r\n   instance2.save( function(err,doc) {\r\n \r\n   if(err) return console.error(err);\r\n \r\n   console.log(\"Second Apple details saved\")\r\n \r\n   });\r\n \r\n   let instance3 = new\r\n \r\n   Apple({Apple_colour:\"purple\", Apple_price:'90',Apple_quantity:200.0});\r\n \r\n    instance3.save( function(err,doc) {\r\n \r\n    if(err) return console.error(err);\r\n \r\n    console.log(\"Third Apple details saved\")\r\n \r\n    });\r\n \r\n }\r\n \r\n let reseed = true;\r\n \r\n if (reseed) { recreateDB();}\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n"],"file":"app.dev.js"}